package com.alflabs.utils;

import junit.framework.TestCase;

import java.io.Serializable;

public class UtilsTest extends TestCase {

    public void testGetApiLevel() throws Exception {
        assertTrue(Utils.getApiLevel() > 0);
    }

    public void testCheckMinApiLevel() throws Exception {
        assertTrue (Utils.checkMinApiLevel( 0));
        assertTrue (Utils.checkMinApiLevel( 1));
        assertFalse(Utils.checkMinApiLevel(42));
    }

    public void testIsEmulator() throws Exception {
        // The fake Build from these test can't satisfy the emulator check
        assertFalse(Utils.isEmulator());
    }

    public void testIsUsingDebugKey() throws Exception {
        // The fake mock overrides from these test can't satisfy the check.
        // It will probably generate an NPE which gets catched and returns false.
        assertFalse(Utils.isUsingDebugKey(null, null));
    }

    public void testSerializeToString() throws Exception {
        Exception r1 = new Exception("some serializable object");

        String s1 = Utils.serializeToString(r1);
        assertNotNull(s1);
        assertEquals(
                "aced0005737200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0006740018736f6d652073657269616c697a61626c65206f626a6563747572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd223902000078700000001f7372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00034c000866696c654e616d6571007e00034c000a6d6574686f644e616d6571007e000378700000001f74001b636f6d2e616c666c6162732e7574696c732e5574696c735465737474000e5574696c73546573742e6a6176617400157465737453657269616c697a65546f537472696e677371007e000afffffffe74002473756e2e7265666c6563742e4e61746976654d6574686f644163636573736f72496d706c74001d4e61746976654d6574686f644163636573736f72496d706c2e6a617661740007696e766f6b65307371007e000a0000003971007e001071007e0011740006696e766f6b657371007e000a0000002b74002873756e2e7265666c6563742e44656c65676174696e674d6574686f644163636573736f72496d706c74002144656c65676174696e674d6574686f644163636573736f72496d706c2e6a61766171007e00147371007e000a0000025e7400186a6176612e6c616e672e7265666c6563742e4d6574686f6474000b4d6574686f642e6a61766171007e00147371007e000a000000b07400186a756e69742e6672616d65776f726b2e546573744361736574000d54657374436173652e6a61766174000772756e546573747371007e000a0000008d71007e001c71007e001d74000772756e426172657371007e000a0000007a74001c6a756e69742e6672616d65776f726b2e54657374526573756c74243174000f54657374526573756c742e6a61766174000770726f746563747371007e000a0000008e74001a6a756e69742e6672616d65776f726b2e54657374526573756c7471007e002374000c72756e50726f7465637465647371007e000a0000007d71007e002671007e002374000372756e7371007e000a0000008171007e001c71007e001d71007e00297371007e000a000000fc7400196a756e69742e6672616d65776f726b2e54657374537569746574000e5465737453756974652e6a61766171007e001e7371007e000a000000f771007e002c71007e002d71007e00297371007e000a0000005674002d6f72672e6a756e69742e696e7465726e616c2e72756e6e6572732e4a556e69743338436c61737352756e6e65727400174a556e69743338436c61737352756e6e65722e6a61766171007e00297371007e000a000000807400176f72672e6a756e69742e72756e6e6572732e537569746574000a53756974652e6a61766174000872756e4368696c647371007e000a0000001b71007e003371007e003471007e00357371007e000a000001227400206f72672e6a756e69742e72756e6e6572732e506172656e7452756e6e65722433740011506172656e7452756e6e65722e6a61766171007e00297371007e000a000000477400206f72672e6a756e69742e72756e6e6572732e506172656e7452756e6e6572243171007e00397400087363686564756c657371007e000a0000012074001e6f72672e6a756e69742e72756e6e6572732e506172656e7452756e6e657271007e003974000b72756e4368696c6472656e7371007e000a0000003a71007e003e71007e003974000a616363657373243030307371007e000a0000010c7400206f72672e6a756e69742e72756e6e6572732e506172656e7452756e6e6572243271007e00397400086576616c756174657371007e000a0000016b71007e003e71007e003971007e00297371007e000a0000008974001a6f72672e6a756e69742e72756e6e65722e4a556e6974436f726574000e4a556e6974436f72652e6a61766171007e00297371007e000a0000004a740028636f6d2e696e74656c6c696a2e6a756e6974342e4a556e697434496465615465737452756e6e65727400194a556e697434496465615465737452756e6e65722e6a617661740013737461727452756e6e657257697468417267737371007e000a000000d374002c636f6d2e696e74656c6c696a2e72742e657865637574696f6e2e6a756e69742e4a556e6974537461727465727400114a556e6974537461727465722e6a6176617400167072657061726553747265616d73416e6453746172747371007e000a0000004371007e004e71007e004f7400046d61696e7371007e000afffffffe71007e001071007e001171007e00127371007e000a0000003971007e001071007e001171007e00147371007e000a0000002b71007e001671007e001771007e00147371007e000a0000025e71007e001971007e001a71007e00147371007e000a0000008674002d636f6d2e696e74656c6c696a2e72742e657865637574696f6e2e6170706c69636174696f6e2e4170704d61696e74000c4170704d61696e2e6a61766171007e0052737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00057872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e005f78",
                s1);

        Object r2 = Utils.deserializeFromString(s1);
        assertNotNull(r2);
        assertEquals("java.lang.Exception", r2.getClass().getCanonicalName());
        assertTrue(r2 instanceof Exception);
        assertEquals("some serializable object", ((Exception) r2).getMessage());
        assertEquals(r1.toString(), r2.toString());
    }
}
